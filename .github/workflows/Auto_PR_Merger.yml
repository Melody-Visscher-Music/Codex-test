name: Auto PR Merge

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch: {}  # lets you run it manually from the Actions tab (works on phone)

permissions:
  contents: write
  pull-requests: write

jobs:
  auto-merge:
    runs-on: ubuntu-latest

    # Block unsafe fork PRs; allow same-repo PRs only (forks have limited token perms)
    if: github.event.pull_request.head.repo.full_name == github.repository || github.event_name == 'workflow_dispatch'

    env:
      PR_NUMBER: ${{ github.event.pull_request.number }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # gh CLI uses GH_TOKEN

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref || github.ref_name }}
          fetch-depth: 0
          persist-credentials: true

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          # fallbacks if tools aren’t in requirements
          python -m pip install black isort flake8 mypy pytest || true

      - name: Run lint and tests
        id: initial
        continue-on-error: true
        run: |
          black --version
          isort --version-number
          flake8 --version
          mypy --version
          pytest --version

          black --check .
          isort --check-only .
          flake8 .
          mypy addons tests
          pytest -q

      - name: Apply auto fixes
        if: steps.initial.outcome == 'failure' && always()
        run: |
          if [ -f scripts/auto_fix.py ]; then
            python scripts/auto_fix.py || true
          fi
          # common auto-fixes if your script didn’t handle them
          black .
          isort .

      - name: Commit & push fixes
        if: steps.initial.outcome == 'failure' && always()
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add -A
            git commit -m "ci: apply auto fixes [skip ci]"
            git push origin HEAD:${{ github.head_ref || github.ref_name }}
            gh pr comment "$PR_NUMBER" -b "Auto fixes applied. Re-running checks."
          fi

      - name: Re-run lint and tests
        if: steps.initial.outcome == 'failure'
        id: retry
        continue-on-error: true
        run: |
          black --check .
          isort --check-only .
          flake8 .
          mypy addons tests
          pytest -q

      - name: Comment failure
        if: |
          (steps.initial.outcome == 'failure' && steps.retry.outcome == 'failure') ||
          (steps.initial.outcome == 'failure' && steps.retry.outcome == 'cancelled')
        run: gh pr comment "$PR_NUMBER" -b "Checks failed. Manual review required."

      - name: Merge PR
        if: |
          (steps.initial.outcome == 'success') ||
          (steps.initial.outcome == 'failure' && steps.retry.outcome == 'success')
        run: |
          gh pr comment "$PR_NUMBER" -b "All checks passed. Merging PR."
          # use --merge (merge commit) / --squash / --rebase as you prefer
          gh pr merge "$PR_NUMBER" --merge --auto
          
